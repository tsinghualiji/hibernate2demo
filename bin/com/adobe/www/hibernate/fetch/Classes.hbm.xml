<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
    Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping>
    <class name="cn.itcast.hibernate0909.onetomany.doubl.Classes">	
    	<id name="cid" type="java.lang.Long" length="5">
    		<column name="cid"></column>
    		<generator class="increment"></generator>
    	</id>
    	
    	<property name="cname" type="java.lang.String" length="20"></property>
    	<property name="description" type="java.lang.String" length="100"></property>
    	<!-- 
    		cascade指的是对象对对象的操作
    		inverse指的是对象对关系的操作
    		fetch 抓取策略
    		   join 连接
    		      *  在页面上既包括一的一方的数据，又包括多的一方的数据
    		      *  数据库的数据量比较小
    		   select 默认的查询方式
   				  使用场景：
   				    *  分两个页面显示一方的数据和多方的数据
   				    *  数据库的数据量比较大
    		      List<Classes> classesList = session.createQuery("from Classes").list();只加载classes的数据
    		      for(Classes classes:classesList){
    		      	classes.getStudents();//每一个班级得到集合的时候才要加载集合中的数据
    		      }
    		   subselect 子查询	
    		      	如果把需求分析翻译成sql语句，用到了子查询，则用subselect      
    	 -->	
    	<set name="students" cascade="all" inverse="false"  lazy="extra" fetch="select" batch-size="5">
    		<key>
    			<!-- 
    				通过classes建立与student之间的联系
    			 -->
    			<column name="cid"></column>
    		</key>
    		<one-to-many class="cn.itcast.hibernate0909.onetomany.doubl.Student"/>
    	</set>
    </class>
</hibernate-mapping>
